version: '3.8'

services:
  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: cqrs_db
    ports:
      - "6543:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "admin"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5673:5672"  # Porta para o cliente
      - "15673:15672"  # Porta para o painel de gerenciamento
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 30s
      timeout: 30s
      retries: 10   
  mongodb:
    image: mongo
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin123
    ports:
      - "37017:27017"
    volumes:
      - mongo_data:/data/db

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app_flask
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: cqrs_db
      MONGO_HOST: mongodb
      MONGO_PORT: 27017
      MONGO_USER: admin
      MONGO_PASSWORD: admin123
      MONGO_DB_NAME: cqrs_db
      MONGO_COLLECTION_NAME: produtos
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: guest
      RABBITMQ_PASSWORD: guest
      IS_DOCKER: true
    ports:
      - "7000:5000"
    depends_on:
      rabbitmq:
        condition: service_started
      mongodb:
        condition: service_started
      postgres:
        condition: service_healthy

  consumidor_eventos:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: consumidor_eventos
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongodb:
        condition: service_started
      app:
        condition: service_started
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USER: guest
      RABBITMQ_PASSWORD: guest
      MONGO_HOST: mongodb
      MONGO_PORT: 27017
      MONGO_USER: admin
      MONGO_PASSWORD: admin123
      MONGO_DB_NAME: cqrs_db
      MONGO_COLLECTION_NAME: produtos
    
    command: python /app/camada_servico/consumidor_eventos.py
      
volumes:
  postgres_data:
  mongo_data:
